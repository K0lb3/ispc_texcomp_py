name: Build & Publish wheels
on:
  workflow_dispatch


jobs:
  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    environment: release
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: install ISPC
        uses: ispc/install-ispc-action@main

      - name: Build sdist
        run: pipx run build --sdist
      
      - name: Install sdist
        run: pip install dist/*.tar.gz

      - uses: actions/upload-artifact@v4
        with:
          name: "sdist"
          path: dist/*.tar.gz
  
  build_wheels_x64:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    environment: release
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, macos-13, ubuntu-latest]

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: install ISPC
        uses: ispc/install-ispc-action@main
      
      - name: Build wheels
        uses: joerick/cibuildwheel@v2.21.2
        env:
          CIBW_BUILD: "cp311-win_amd64 cp311-win32 cp311-win_arm64 cp311-musllinux_x86_64 cp311-musllinux_i686 cp311-macosx_x86_64"
          CIBW_TEST_SKIP: "*"
          CIBW_BEFORE_BUILD_LINUX: >
            apk add ispc
          CIBW_REPAIR_WHEEL_COMMAND_LINUX: >
            auditwheel repair -w {dest_dir} {wheel} &&
            pipx run abi3audit --strict --report {wheel}
          CIBW_REPAIR_WHEEL_COMMAND_MACOS: >
            delocate-wheel --require-archs {delocate_archs} -w {dest_dir} -v {wheel} &&
            pipx run abi3audit --strict --report {wheel}
          CIBW_REPAIR_WHEEL_COMMAND_WINDOWS: >
            copy {wheel} {dest_dir} &&
            pipx run abi3audit --strict --report {wheel}

      - uses: actions/upload-artifact@v4
        with:
          name: "${{ matrix.os }}-x64"
          path: ./wheelhouse/*.whl
          retention-days: 1
  
  build_wheels_arm64:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    environment: release
    strategy:
      fail-fast: false
      matrix:
        os: [macos-14, ubuntu-22.04-arm]

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: install ISPC
        uses: ispc/install-ispc-action@main
      
      - name: Build wheels
        uses: joerick/cibuildwheel@v2.21.2
        env:
          CIBW_BUILD: "cp311-musllinux_aarch64 cp311-macosx_arm64"
          CIBW_TEST_SKIP: "*"
          CIBW_BEFORE_BUILD_LINUX: >
            apk add ispc
          CIBW_REPAIR_WHEEL_COMMAND_LINUX: >
            auditwheel repair -w {dest_dir} {wheel} &&
            pipx run abi3audit --strict --report {wheel}
          CIBW_REPAIR_WHEEL_COMMAND_MACOS: >
            delocate-wheel --require-archs {delocate_archs} -w {dest_dir} -v {wheel} &&
            pipx run abi3audit --strict --report {wheel}
          CIBW_REPAIR_WHEEL_COMMAND_WINDOWS: >
            copy {wheel} {dest_dir} &&
            pipx run abi3audit --strict --report {wheel}
        
      - uses: actions/upload-artifact@v4
        with:
          name: "${{ matrix.os }}-arm64"
          path: ./wheelhouse/*.whl
          retention-days: 1

  upload_pypi:
    name: Publish to PyPI
    needs: [build_wheels_x64, build_wheels_arm64, build_sdist]
    runs-on: ubuntu-latest
    environment: release
    permissions:
        id-token: write
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: dist
          merge-multiple: true

      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          skip-existing: true
